{
  "active": true,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Microsoft Outlook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-30T23:32:19.872Z",
  "id": "JesGaFSFLfcYTkvh",
  "meta": null,
  "name": "Chloe birthday emails",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9,
              "triggerAtMinute": 2
            }
          ]
        }
      },
      "id": "5f7544d7-aefe-4189-b3ff-9525cc34f690",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        1440,
        600
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function checkDate(inputDate) {\n    // Get today's date in UTC\n    var todayUTC = new Date();\n    $input.item.json.test = todayUTC.getTime();\n    // Convert UTC to Adelaide time\n    var adelaideTimeOffset = 10.5 * 60 * 60 * 1000; // Adelaide time offset in milliseconds (10.5 hours ahead of UTC)\n    $input.item.json.adelaideOffset = adelaideTimeOffset\n    var adelaideTime = new Date(todayUTC.getTime() + adelaideTimeOffset);\n  \n    // Format Adelaide date\n    var dd = String(adelaideTime.getUTCDate());\n    var mm = String(adelaideTime.getUTCMonth()+1);//dates arre zero  indexed\n\n    const inputSplit = inputDate.split(\"-\");\n    $input.item.json.dd = dd\n    $input.item.json.mm = mm\n    $input.item.json.split_dd = inputSplit[inputSplit.length - 1]\n    $input.item.json.split_mm = inputSplit[inputSplit.length - 2]\n    \n    // Check if input date matches Adelaide's date\n    if (inputSplit[inputSplit.length - 1] === dd && inputSplit[inputSplit.length - 2] === mm) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$input.item.json.isBirthday = checkDate($input.item.json.data.birthdate);\nreturn $input.item;\n"
      },
      "id": "dcb8efab-ec0f-46d1-ade9-30a1dfdbd23e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2620,
        600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d747024a-9dfe-4bf8-8910-73008e8fa8d5",
              "leftValue": "={{ $json.isBirthday }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ec337095-64e2-4660-8a74-e72a346d05a2",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        2840,
        600
      ]
    },
    {
      "parameters": {
        "toRecipients": "chloe@lbsupport.com.au",
        "subject": "=Its {{ $json.data.firstname }}  {{ $json.data.lastname }}'s birthday",
        "bodyContent": "=congrats on your birthday  ",
        "additionalFields": {}
      },
      "id": "80e4009d-6dbe-4237-9ffa-e1e5cf80aedf",
      "name": "Microsoft Outlook",
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        3060,
        600
      ],
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "n0YR7IN5gCyziEDy",
          "name": "Chloe lb support"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.splose.com/v1/patients",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 2ZYIfpLAVVmXEyJ60c4U7-7rcA98ctK9UH5ICeNlHJrZ5hKdG4HCOc6FITC9IbjqKaUq2j0m2YHglJK_p5Vxkg.EOfQZQF55wse8xYOfOTyLuLHIm7wM-VFVe6DnSlaxJU"
            }
          ]
        },
        "options": {}
      },
      "id": "e68ae707-877c-4dff-8cc6-214e0a52ea8e",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1860,
        600
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "22e12961-2572-406c-8da1-13a053a54bac",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2300,
        600
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "6do80UIdKHGFUpAo"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-05-06T10:04:08.000Z",
  "versionId": "0c1aadf0-554d-4496-a041-8550abfc5d8f"
}