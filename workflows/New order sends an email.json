{
  "active": true,
  "connections": {
    "Shopify Trigger": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Microsoft Outlook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Microsoft Outlook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-17T01:42:03.881Z",
  "id": "jrV6IfYlQ7NjO0rS",
  "meta": null,
  "name": "New order sends an email",
  "nodes": [
    {
      "parameters": {
        "toRecipients": "={{ $json.contact_email }}",
        "subject": "üéôÔ∏è Capture the Magic: Record Your Custom Greeting for the Big Day with Voice Keepsakes!",
        "bodyContent": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Wedding Audio Greeting</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #f0f0f0;\n            padding-bottom: 1rem;\n        }\n\n        .container {\n            max-width: 600px;\n            margin: 20px auto;\n            padding: 20px;\n            background-color: #ffffff;\n            border-radius: 8px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        }\n\n        .banner {\n            background-color: #123740;\n            text-align: center;\n            padding: 10px 0;\n            border-radius: 8px 8px 0 0; \n        }\n\n        .banner h2 {\n            color: #ffffff;\n            margin: 0;\n        }\n\n        h3 {\n            color: #123740;\n        }\n\n        p {\n            color: #333333;\n            line-height: 1.6;\n        }\n\n        a {\n            color: #006400;\n            text-decoration: none;\n        }\n\n        a:hover {\n            text-decoration: underline;\n        }\n\n        .button {\n            display: inline-block;\n            padding: 10px 20px;\n            background-color: #123740;\n            color: #ffffff;\n            text-decoration: none;\n            margin-bottom: 15px;\n            border-radius: 5px;\n            transition: background-color 0.2s ease; /* Add smooth color transition on hover */\n        }\n        .button:hover {\n            background-color: #0c2227; /* Darker green on hover */\n        }\n\n        .message-examples {\n            margin-top: 20px;\n            color: #555555;\n        }\n\n\n        .signature {\n            margin-top: 40px;\n            text-align: right;\n        }\n        \n        .test {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            justify-content: flex-end; /* Align content to the right */\n        }\n\n        .signature p {\n            font-size: 14px;\n            color: #333333;\n            line-height: 0;\n        }\n\n        .signature span {\n            display: inline-block;\n            margin-right: 10px;\n        }\n\n        .signature img {\n            height: 20px;\n            width: auto;\n            padding-bottom: 4px;\n            padding-right: 4px;\n        }\n        \n        .record-button-div {\n            display: flex;\n            justify-content: center;\n        }\n\n    </style>\n</head>\n<body>\n    <div class=\"banner\">\n        <h2>Voice Keepsakes</h2>\n<img src=\"https://i.ibb.co/87kzVTK/test.png\">\n\n    </div>\n    <div class=\"container\">\n        <h3>Hey {{ $('Shopify Trigger').item.json.customer.first_name }} üëã,</h3>\n        <p>Thank you so much for choosing Voice Keepsakes for your audio guest book! As part of this delightful experience, we invite you to create a custom greeting that will warmly welcome your guests when they pick up the phone. Your personal touch will undoubtedly make the moments even more special. <br />You have the flexibility to complete this closer to the event date, and rest assured, we'll send you friendly reminder emails. Alternatively, you can take care of it now and enjoy peace of mind, knowing it's all sorted.</p>\n        <div class=\"record-button-div\"><a href=\"https://recording.voicekeepsakes.com.au/?orderId={{ $json.encodedOrderNumber }}\" target=\"_blank\" class=\"button\">Record Your Message</a></div>\n        <p>If you could do this by <b>{{ $input.item.json.uploadDeadline }}</b>, then we can load this on your phone and get it to you in\n            time for your event on the {{ $input.item.json.delDate }} üôÇ </p>\n\n        <div class=\"message-examples\">\n            <p>Here are some examples if you need some help with what kind of things to say,</p>\n            <ul>\n                <li>\"Hello, dear friends and family! Thank you for being a part of our special day. We are so grateful\n                    to have you here celebrating with us. Please leave a message with your thoughts, wishes, or advice\n                    for us after the beep. We can't wait to hear your voices and cherish these memories forever.\"</li>\n                <li>\"Hey there, amazing people! We're overjoyed that you're here to celebrate this magical day with us.\n                    Leave us a message after the beep, and don't hold back! Share your well wishes, funny stories, or\n                    any advice you have for us. We promise to cherish every word and maybe even have a laugh or two\n                    along the way!\"</li>\n                <li>\"Hello, everyone! Your presence means the world to us. We're so happy to have you here as we start\n                    this incredible journey together. Share your love, your hopes, or any wisdom you'd like to pass on\n                    after the beep. Your words will be a treasure for us, and we can't thank you enough for being a part\n                    of our special day.\"</li>\n                <li>\"Hey, friends and family! It's us, [Couple's Names]. We're beyond excited to have you here, and we'd\n                    love to hear your thoughts, stories, or any crazy advice you have for us. Don't be shy; be as\n                    creative and unique as you'd like! After the beep, leave your message, and we can't wait to listen\n                    and laugh together later. Thanks for being awesome!\"</li>\n            </ul>\n        </div>\n\n        <p>Just reply to this email if you need any help or have any questions üòÑ</p>\n        <div class=\"signature\">\n            <p>\n                <span>Kind regards,</span>\n            </p>\n            <div class=\"test\">\n                <img src=\"https://i.ibb.co/pvd4WSb/test-1.png\">\n                <p><span>Voice Keepsakes</span></p>\n            </div>\n        </div>\n    </div>\n</body>\n</html> ",
        "additionalFields": {
          "bccRecipients": "wade@voicekeepsakes.com.au",
          "bodyContentType": "html"
        }
      },
      "id": "2848d13c-fc50-4585-b924-f106c5933497",
      "name": "Microsoft Outlook",
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        1360,
        360
      ],
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "kk1sPj8USL1RL0GY",
          "name": "Microsoft Outlook account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "accessToken",
        "topic": "orders/create"
      },
      "id": "d167bd7c-2994-46d1-ab9e-4dbfa76c4fac",
      "name": "Shopify Trigger",
      "type": "n8n-nodes-base.shopifyTrigger",
      "typeVersion": 1,
      "position": [
        60,
        380
      ],
      "webhookId": "35eaf535-a0e3-4b94-a473-bd738949dd6e",
      "credentials": {
        "shopifyAccessTokenApi": {
          "id": "zKYJyGyRGR4R2Vmm",
          "name": "Shopify Access Token account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "This one is shitty because the trigger works but i cant test it here. so i've pineed some data to the trigger output to test",
        "height": 176,
        "width": 524
      },
      "id": "e37ebc0a-1d1c-4f1d-8bf1-ed11d523675e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        100
      ]
    },
    {
      "parameters": {
        "content": "On new order we should send an email on where they can upload their audio recordings",
        "height": 176,
        "width": 524
      },
      "id": "e9168886-24fe-448f-9f2c-29a5dca2f521",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        120
      ]
    },
    {
      "parameters": {
        "content": "TODO:\n- lots of things",
        "height": 176,
        "width": 524
      },
      "id": "687627d5-12ec-425f-b069-926d9f731ed1",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1040,
        700
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Add a new field called 'myNewField' to the JSON of the item\nfunction base64Encode(str) {\n  const buffer = Buffer.from(str, 'utf-8');\n  return buffer.toString('base64');\n}\n$input.item.json.encodedOrderNumber = base64Encode($input.item.json.order_number.toString())\nreturn $input.item;"
      },
      "id": "5e759d46-f4b3-46ce-bfbe-1e9ca63b5919",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        360
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function formatDate(inputDate) {\n    const months = [\n      'January', \n      'February', \n      'March', \n      'April', \n      'May', \n      'June', \n      'July', \n      'August', \n      'September', \n      'October', \n      'November', \n      'December'\n    ];\n    \n    const dateParts = inputDate.split('/');\n    const year = dateParts[0];\n    const month = months[parseInt(dateParts[1], 10) - 1];\n    const day = parseInt(dateParts[2], 10);\n\n    const ordinalSuffix = (day) => {\n        if (day >= 11 && day <= 13) {\n            return 'th';\n        }\n        switch (day % 10) {\n            case 1:\n                return 'st';\n            case 2:\n                return 'nd';\n            case 3:\n                return 'rd';\n            default:\n                return 'th';\n        }\n    };\n\n    const formattedDate = `the ${day}${ordinalSuffix(day)} of ${month} ${year}`;\n    return formattedDate;\n}\n\nconst deadline = new Date($input.item.json.formattedDate);\ndeadline.setDate(deadline.getDate() - 12);\n// $input.item.json.test34 = deadline.toISOString().split('T')[0].replaceAll('-', '/')\n\n$input.item.json.uploadDeadline = formatDate(deadline.toISOString().split('T')[0].replaceAll('-', '/'));\n$input.item.json.delDate = formatDate($input.item.json.formattedDate);\n\nreturn $input.item;"
      },
      "id": "2dd67a7f-09f7-497a-9109-0c64d3b6652b",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        360
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function formatDate(inputDate) {\n  // Create a Date object from the input date string\n  const dateObject = new Date(inputDate);\n  if (isNaN(dateObject)){\n    return null\n  }\n  \n\n  // Extract year, month, and day components\n  const year = dateObject.getFullYear();\n  const month = String(dateObject.getMonth() + 1).padStart(2, '0'); // Months are zero-based\n  const day = String(dateObject.getDate()).padStart(2, '0');\n\n  // Create the formatted date string in \"yyyy-mm-dd\" format\n  const formattedDate = `${year}/${month}/${day}`;\n\n  return formattedDate;\n}\n\n\n// // Example usage:\nconst line_item_props = $input.item.json.line_items.map(line_item => line_item.properties).flat(1)\n\nconst all_dates = line_item_props.filter(item => item.name === \"Delivery Date\");\n\n// const filteredArray = result.filter(value => value !== null);\n\nif(all_dates.length != 1){\n  $input.item.json.formattedDate = null\n}\nelse {\n  //if we can;t format it return null so that it emails me\n  if(formatDate(all_dates[0].value) === null){\n    $input.item.json.formattedDate = null\n  } else{\n    $input.item.json.formattedDate = formatDate(all_dates[0].value)    \n  }\n}\n\nreturn $input.item;"
      },
      "id": "8c383125-d678-4893-ad06-fcf69f7dafd8",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "784ff6f3-f35b-4f6d-9b87-602de99415fa",
              "leftValue": "={{ $json.formattedDate }}",
              "rightValue": 1,
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "c72b3e0b-aecb-43a1-a049-b075ec23cf5d",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        380
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "toRecipients": "heweywade@hotmail.com",
        "subject": "New order sends email - something went wrong",
        "bodyContent": "=Something went wrong please check n8n ",
        "additionalFields": {}
      },
      "id": "48050db9-82fa-4562-8c55-9a56fd0faddf",
      "name": "Microsoft Outlook1",
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        680,
        540
      ],
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "kk1sPj8USL1RL0GY",
          "name": "Microsoft Outlook account"
        }
      }
    }
  ],
  "pinData": {
    "Shopify Trigger": [
      {
        "json": {
          "id": 5724673507620,
          "admin_graphql_api_id": "gid://shopify/Order/5724673507620",
          "app_id": 580111,
          "browser_ip": "167.30.222.60",
          "buyer_accepts_marketing": false,
          "cancel_reason": null,
          "cancelled_at": null,
          "cart_token": "Z2NwLWFzaWEtc291dGhlYXN0MTowMUhRMkJaOVZRUjc3QkhSQjBRWjYzUk5EWg",
          "checkout_id": 37261085081892,
          "checkout_token": "6bc559291d301b3e0c73c89bb7a4b5c5",
          "client_details": {
            "accept_language": "en-AU",
            "browser_height": null,
            "browser_ip": "167.30.222.60",
            "browser_width": null,
            "session_hash": null,
            "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
          },
          "closed_at": null,
          "confirmation_number": "JPDK5Y1QW",
          "confirmed": true,
          "contact_email": "heweywade@hotmail.com",
          "created_at": "2024-02-21T14:47:23+10:30",
          "currency": "AUD",
          "current_subtotal_price": "245.00",
          "current_subtotal_price_set": {
            "shop_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            }
          },
          "current_total_additional_fees_set": null,
          "current_total_discounts": "105.00",
          "current_total_discounts_set": {
            "shop_money": {
              "amount": "105.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "105.00",
              "currency_code": "AUD"
            }
          },
          "current_total_duties_set": null,
          "current_total_price": "245.00",
          "current_total_price_set": {
            "shop_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            }
          },
          "current_total_tax": "0.00",
          "current_total_tax_set": {
            "shop_money": {
              "amount": "0.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "0.00",
              "currency_code": "AUD"
            }
          },
          "customer_locale": "en-AU",
          "device_id": null,
          "discount_codes": [
            {
              "code": "LOVE30",
              "amount": "105.00",
              "type": "percentage"
            }
          ],
          "email": "carly-fordham93@hotmail.com",
          "estimated_taxes": false,
          "financial_status": "paid",
          "fulfillment_status": null,
          "landing_site": "/pages/all-phones",
          "landing_site_ref": null,
          "location_id": null,
          "merchant_of_record_app_id": null,
          "name": "#1022",
          "note": null,
          "note_attributes": [],
          "number": 22,
          "order_number": 1022,
          "order_status_url": "https://voicekeepsakes.com.au/78539129124/orders/2e94ce254e27a0dbd2414f989c3551b9/authenticate?key=cb4760a1009fa3afa8dae40811da7db1",
          "original_total_additional_fees_set": null,
          "original_total_duties_set": null,
          "payment_gateway_names": [
            "paypal"
          ],
          "phone": null,
          "po_number": null,
          "presentment_currency": "AUD",
          "processed_at": "2024-02-21T14:47:18+10:30",
          "reference": "4359fe3acba5b7c1815b7d864ef272e6",
          "referring_site": "",
          "source_identifier": "4359fe3acba5b7c1815b7d864ef272e6",
          "source_name": "web",
          "source_url": null,
          "subtotal_price": "245.00",
          "subtotal_price_set": {
            "shop_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            }
          },
          "tags": "",
          "tax_exempt": false,
          "tax_lines": [],
          "taxes_included": true,
          "test": false,
          "token": "2e94ce254e27a0dbd2414f989c3551b9",
          "total_discounts": "105.00",
          "total_discounts_set": {
            "shop_money": {
              "amount": "105.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "105.00",
              "currency_code": "AUD"
            }
          },
          "total_line_items_price": "350.00",
          "total_line_items_price_set": {
            "shop_money": {
              "amount": "350.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "350.00",
              "currency_code": "AUD"
            }
          },
          "total_outstanding": "0.00",
          "total_price": "245.00",
          "total_price_set": {
            "shop_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "245.00",
              "currency_code": "AUD"
            }
          },
          "total_shipping_price_set": {
            "shop_money": {
              "amount": "0.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "0.00",
              "currency_code": "AUD"
            }
          },
          "total_tax": "0.00",
          "total_tax_set": {
            "shop_money": {
              "amount": "0.00",
              "currency_code": "AUD"
            },
            "presentment_money": {
              "amount": "0.00",
              "currency_code": "AUD"
            }
          },
          "total_tip_received": "0.00",
          "total_weight": 2000,
          "updated_at": "2024-02-21T14:47:25+10:30",
          "user_id": null,
          "billing_address": {
            "first_name": "Carly",
            "address1": "15 Hudson Drive",
            "phone": null,
            "city": "Dudley Park",
            "zip": "6210",
            "province": "Western Australia",
            "country": "Australia",
            "last_name": "Fordham",
            "address2": null,
            "company": null,
            "latitude": null,
            "longitude": null,
            "name": "Carly Fordham",
            "country_code": "AU",
            "province_code": "WA"
          },
          "customer": {
            "id": 8084880490788,
            "email": "carly-fordham93@hotmail.com",
            "created_at": "2024-02-21T14:47:18+10:30",
            "updated_at": "2024-02-21T14:47:23+10:30",
            "first_name": "Carly",
            "last_name": "Fordham",
            "state": "disabled",
            "note": null,
            "verified_email": true,
            "multipass_identifier": null,
            "tax_exempt": false,
            "phone": null,
            "email_marketing_consent": {
              "state": "not_subscribed",
              "opt_in_level": "single_opt_in",
              "consent_updated_at": null
            },
            "sms_marketing_consent": null,
            "tags": "",
            "currency": "AUD",
            "tax_exemptions": [],
            "admin_graphql_api_id": "gid://shopify/Customer/8084880490788",
            "default_address": {
              "id": 10160009445668,
              "customer_id": 8084880490788,
              "first_name": "Carly",
              "last_name": "Fordham",
              "company": null,
              "address1": "15 Hudson Drive",
              "address2": null,
              "city": "Dudley Park",
              "province": "Western Australia",
              "country": "Australia",
              "zip": "6210",
              "phone": null,
              "name": "Carly Fordham",
              "province_code": "WA",
              "country_code": "AU",
              "country_name": "Australia",
              "default": true
            }
          },
          "discount_applications": [
            {
              "target_type": "line_item",
              "type": "discount_code",
              "value": "30.0",
              "value_type": "percentage",
              "allocation_method": "across",
              "target_selection": "entitled",
              "code": "LOVE30"
            }
          ],
          "fulfillments": [],
          "line_items": [
            {
              "id": 14660513464612,
              "admin_graphql_api_id": "gid://shopify/LineItem/14660513464612",
              "attributed_staffs": [],
              "current_quantity": 1,
              "fulfillable_quantity": 1,
              "fulfillment_service": "manual",
              "fulfillment_status": null,
              "gift_card": false,
              "grams": 2000,
              "name": "Vintage White Phone - White",
              "price": "350.00",
              "price_set": {
                "shop_money": {
                  "amount": "350.00",
                  "currency_code": "AUD"
                },
                "presentment_money": {
                  "amount": "350.00",
                  "currency_code": "AUD"
                }
              },
              "product_exists": true,
              "product_id": 8475675328804,
              "properties": [
                {
                  "name": "Delivery Date",
                  "value": "October 19, 2024"
                }
              ],
              "quantity": 1,
              "requires_shipping": true,
              "sku": "",
              "taxable": true,
              "title": "Vintage White Phone",
              "total_discount": "0.00",
              "total_discount_set": {
                "shop_money": {
                  "amount": "0.00",
                  "currency_code": "AUD"
                },
                "presentment_money": {
                  "amount": "0.00",
                  "currency_code": "AUD"
                }
              },
              "variant_id": 46464287768868,
              "variant_inventory_management": "shopify",
              "variant_title": "White",
              "vendor": "Voice Keep Sakes",
              "tax_lines": [],
              "duties": [],
              "discount_allocations": [
                {
                  "amount": "105.00",
                  "amount_set": {
                    "shop_money": {
                      "amount": "105.00",
                      "currency_code": "AUD"
                    },
                    "presentment_money": {
                      "amount": "105.00",
                      "currency_code": "AUD"
                    }
                  },
                  "discount_application_index": 0
                }
              ]
            }
          ],
          "payment_terms": null,
          "refunds": [],
          "shipping_address": {
            "first_name": "Carly",
            "address1": "15 Hudson Drive",
            "phone": null,
            "city": "Dudley Park",
            "zip": "6210",
            "province": "Western Australia",
            "country": "Australia",
            "last_name": "Fordham",
            "address2": null,
            "company": null,
            "latitude": -32.5535187,
            "longitude": 115.7367397,
            "name": "Carly Fordham",
            "country_code": "AU",
            "province_code": "WA"
          },
          "shipping_lines": [
            {
              "id": 4617124839716,
              "carrier_identifier": "650f1a14fa979ec5c74d063e968411d4",
              "code": "Arrive before event",
              "discounted_price": "0.00",
              "discounted_price_set": {
                "shop_money": {
                  "amount": "0.00",
                  "currency_code": "AUD"
                },
                "presentment_money": {
                  "amount": "0.00",
                  "currency_code": "AUD"
                }
              },
              "phone": null,
              "price": "0.00",
              "price_set": {
                "shop_money": {
                  "amount": "0.00",
                  "currency_code": "AUD"
                },
                "presentment_money": {
                  "amount": "0.00",
                  "currency_code": "AUD"
                }
              },
              "requested_fulfillment_service_id": null,
              "source": "shopify",
              "title": "Arrive before event",
              "tax_lines": [],
              "discount_allocations": []
            }
          ]
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "6do80UIdKHGFUpAo"
  },
  "staticData": {
    "node:Shopify Trigger": {
      "webhookId": 1548915966244
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-19T06:29:17.907Z",
      "updatedAt": "2024-01-19T06:29:17.907Z",
      "id": "9Wlg3x6juVGk3V4C",
      "name": "triggered"
    },
    {
      "createdAt": "2024-01-25T22:38:44.923Z",
      "updatedAt": "2024-01-25T22:38:44.923Z",
      "id": "ABAeIm9fPam1wo4P",
      "name": "done"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-07-09T05:55:39.000Z",
  "versionId": "7a54608c-3ac5-4c39-9787-2a2b5219cf4b"
}